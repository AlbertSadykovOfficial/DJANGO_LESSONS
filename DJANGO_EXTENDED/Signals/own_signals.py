"""
    Объявление своих сигналов:

        Для собственных нужд можно объявить доп сигналы.
            1) Объявляем сигнал, создав экземпляр класса Signal
            2) В нужном месте кода инициализирум отправлку объявленного сигнала


        Объявление сигнала:
            Signal(providing_args=<список имен параметров, передаваемых обработчику>)
                (Имена, передаваемые в списке должны быть в виде строк)

            Пример:
            from django.dispatch import Signal
            add_bb = Signal(providing_args=['instance', 'rubric'])

        Инициировать отправку:
            send(<отправитель>[, <именованные параметры, указанные при объявлении сигнала>])

            Пример:
            add_bb.send(Poster, instance=poster, rubric=poster.rubric)
            (Если к сгналу привязано несколько обработчиков, и в одном из них было возбуждено исключение,
            послежующие обработчики выполнены не будут)

            send_robust(<отправитель>[, <именованные параметры, указанные при объявлении сигнала>])
                (Что и send(), но обрабатывает все исключения, которые могут юыть возбуждены)

                Объекты исключений будут присутствовать в резульате, возвращенном методом,
                во вторых элементах соответсвуюих вложенных кортежей

"""